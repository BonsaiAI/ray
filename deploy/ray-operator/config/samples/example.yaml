apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
    # An unique identifier for the head node and workers of this cluster.
  name: raycluster-sample
spec:
  ######################headService#################################
  # head service {namespace}.svc , follows Kubernetes standard
  headService: 
    metadata:
      name: "ray-operator.svc"
    spec:
      selector:
        raycluster.group.name: headgroup
      ports:
        - protocol: TCP
          port: 80
          targetPort: 6379
  ######################headGroupSpecs#################################
  # head group template and specs, (perhaps 'group' is not needed in the name)
  headGroupSpecs:
    # the pod replicas in this group typed head (assuming there could be more than 1 in the future)
    - replicas: 1
      # logical group name, for this called head-group, also can be functional
      groupName: head-group
      # pod type head or worker
      # rayNodeType: head # Not needed since it is under the headgroup
      # the following params are used to complete the ray start: ray start --head --block --redis-port=6379 ...
      rayStartParams:
        redis-port: 6379
        object-manager-port: 12345
        node-manager-port: 12346
        object-store-memory: 100000000
        num-cpus: 1 # can be auto-completed from the limits
        node-ip-address: $MY_POD_IP # auto-completed as the head pod IP
        ...
      #pod template
      template:
        metadata:
          labels:
            # custom labels. NOTE: do not define custom labels start with `raycluster.`, they may be used in controller.
            # Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
            rayCluster: raycluster-sample # will be injected if missing
            rayNodeType: headNode # will be injected if missing
            groupName: headgroup # will be injected if missing
          # annotations for pod
          annotations:
            key: value
        spec:
          containers:
          - name: machineLearning
            image: rayproject/autoscaler
            command: ["python main.py"]
            # environment variables to set in the container.Optional.
            # Refer to https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
            env:
            - name: TYPE
              value: "worker"
            - name: MY_CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: machineLearning
                  resource: requests.cpu
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            ports:
            - containerPort: 6379
            # use volumeMounts.Optional.
            # Refer to https://kubernetes.io/docs/concepts/storage/volumes/
            volumeMounts:
              - mountPath: /path/to/log
                name: log-volume
            resources:
              limits:
                cpu: "2"
              requests:
                cpu: "1"
          # use volumes
          # Refer to https://kubernetes.io/docs/concepts/storage/volumes/
          volumes:
            - name: log-volume
              emptyDir: {}
  ######################workerGroupSpecs#################################
  # worker group template and specs
  workerGroupSpecs:
    # the pod replicas in this group typed worker
    - replicas: 2
      minReplicas: 1
      maxReplicas: 10
      # logical group name, for this called small-group, also can be functional
      groupName: small-group
      # if worker pods need to be added, we can simply increment the replicas
      # if worker pods need to be removed, we decrement the replicas, and populate the podsToDelete list
      # the operator will remove pods from the list until the number of replicas is satisfied
      # when a pod is confirmed to be deleted, its name will be removed from the list below
      scaleStrategy:
        workersToDelete:
        - worker-9m1rp
        - worker-4k2ih 
      # pod type worker
      rayNodeType: worker
      # the following params are used to complete the ray start: ray start --block --node-ip-address= ...
      rayWorkerStartParams:
        #address: $RAY_IP:6379 # can be auto-completed
        object-manager-port: 12345
        node-manager-port: 12346
        object-store-memory: 100000000
        num-cpus: 1 # can be auto-completed from the limits
      #pod template
      template:
        metadata:
          labels:
            rayCluster: raycluster-sample # will be injected if missing
            rayNodeType: worker # will be injected if missing
            groupName: small-group # will be injected if missing
          # annotations for pod
          annotations:
            key: value
        spec:
          containers:
          - name: machineLearning
            image: rayproject/autoscaler
            # environment variables to set in the container.Optional.
            # Refer to https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
            env:
            - name: TYPE
              value: "worker"
            - name: MY_CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: machineLearning
                  resource: requests.cpu
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            ports:
            - containerPort: 80
            # use volumeMounts.Optional.
            # Refer to https://kubernetes.io/docs/concepts/storage/volumes/
            volumeMounts:
              - mountPath: /path/to/log
                name: log-volume
            resources:
              limits:
                cpu: "2"
              requests:
                cpu: "1"
          # use volumes
          # Refer to https://kubernetes.io/docs/concepts/storage/volumes/
          volumes:
            - name: log-volume
              emptyDir: {}
######################status#################################
status:
  workerGroup:
    readyReplicas: 2
    replicas: 2
    conditions:
    - lastUpdateTime: 2016-10-04T12:25:39Z
      message: deleted pod "worker-4262182780"
      reason: ReplicasUpdated
      status: "True"
      type: Completed
  clusterStatus:
    ready: true